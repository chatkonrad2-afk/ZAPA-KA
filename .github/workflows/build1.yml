name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Get Date (UTC)
        id: get-date
        run: echo "date=$(/bin/date -u +'%Y%m%d')" >> "$GITHUB_OUTPUT"
        shell: bash

      # Cache: buildozer global (narzędzia / sdk/ndk pobierane przez action)
      - name: Cache Buildozer global directory
        uses: actions/cache@v4
        with:
          path: .buildozer_global
          key: buildozer-global-${{ hashFiles('buildozer.spec') }}
          restore-keys: |
            buildozer-global-

      # Cache: katalog kompilacji buildozer (bez daty, żeby trafiać cache między dniami)
      - name: Cache Buildozer build directory
        uses: actions/cache@v4
        with:
          path: .buildozer
          key: ${{ runner.os }}-buildozer-${{ hashFiles('buildozer.spec', 'requirements.txt', 'requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-buildozer-
            ${{ runner.os }}-

      # Opcjonalnie: cache Gradle (jeśli projekt generuje android/gradle)
      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Buildozer
        id: buildozer
        uses: ArtemSBulgakov/buildozer-action@v1
        with:
          command: buildozer android debug
          buildozer_version: stable
        # Jeśli potrzebujesz konkretnej Javy/SDK/NDK, możesz ustawić ENV:
        # env:
        #   JAVA_HOME: /usr/lib/jvm/temurin-17-jdk-amd64

      - name: Show produced artifact name
        run: echo "APK: ${{ steps.buildozer.outputs.filename }}"

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: ${{ steps.buildozer.outputs.filename }}
          if-no-files-found: error
